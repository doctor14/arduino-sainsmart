/* mathematical derivation of position profile and profile duration
 * given:
 * l is the distance to travel
 * t is time
 * d is duration
 * c is a constant factor
 * m is the maximum jerk
 * v and vv is speed
 * s and ss is position
 * a and aa is acceleration
 * j and jj is jerk
 */

/* use sin(t)^2 for speed profile */
v(t, d, c) := c * sin(%pi * t / d) ^ 2;
plot2d(v(t, 10, 1), [t, 0, 10]);

/* determine position */
integrate(v(t, d, c), t);
s(t, d, c) := (c * d * (%pi * t / d - sin(2 * %pi * t / d) / 2)) / (2 * %pi);
plot2d(s(t, 10, 1), [t, 0, 10]);

/* determine constant factor */
solve(s(d, d, c) = l, c);

/* resulting position */
ss(t, d, l) := s(t, d, 2 * l / d);
ss(t, d, l) := l * (%pi * t / d - sin(2 * %pi * t / d) / 2) / %pi;

/* resulting speed */
diff(ss(t, d, l), t);
vv(t, d, l) := l * (%pi / d - %pi * cos(2 * %pi * t / d) / d) / %pi;

/* resulting acceleration */
diff(vv(t, d, l), t);
aa(t, d, l) := 2 * %pi * l * sin(2 * %pi * t / d) / d ^ 2;

/* resulting jerk */
diff(aa(t, d, l), t);
jj(t, d, l) := 4 * %pi ^ 2 * l * cos(2 * %pi * t / d) / d ^ 3;
plot2d(jj(t, 10, 5), [t, 0, 10]);

/* determine duration given maximum jerk */
solve(jj(0, d, l) = m, d);
d = (4 * %pi ^ 2 * l / m) ^ (1 / 3);
